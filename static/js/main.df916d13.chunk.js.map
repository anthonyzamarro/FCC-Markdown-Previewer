{"version":3,"sources":["components/textarea.js","actions/inputAction.js","actions/clearAction.js","components/previewer.js","reducers/inputReducer.js","index.js"],"names":["TextArea","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","val","content","init","textChange","handleClick","bind","assertThisInitialized","e","setState","target","value","clearText","react_default","a","createElement","className","href","rel","type","id","onClick","cols","rows","onChange","handleChange","Component","connect","dispatch","data","payload","marked","require","Preview","setOptions","breaks","gfm","c","dangerouslySetInnerHTML","__html","defaultState","store","createStore","arguments","length","undefined","action","rootElement","document","getElementById","ReactDOM","render","es","components_textarea","previewer"],"mappings":"yPAMMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,IAAKR,EAAKD,MAAMU,QAAQC,MAE1BV,EAAKD,MAAMY,WAAWX,EAAKO,MAAMC,KACjCR,EAAKY,YAAcZ,EAAKY,YAAYC,KAAjBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KANFA,4EAQNe,GACXZ,KAAKa,SAAS,CACZR,IAAKO,EAAEE,OAAOC,QAEhBf,KAAKJ,MAAMY,WAAWI,EAAEE,OAAOC,2CAErBH,GACXZ,KAAKa,SAAS,CACbR,IAAK,KAENL,KAAKJ,MAAMoB,UAAU,qCAGpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,YACUH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,mEAAmEP,OAAO,SAASQ,IAAI,uBAA/F,mBAGVL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAASR,MAAM,QAAQS,GAAG,QAAQJ,UAAU,YAAYK,QAASzB,KAAKS,eAElFQ,EAAAC,EAAAC,cAAA,YACEK,GAAG,SACHE,KAAK,KACLC,KAAK,KACLC,SAAU5B,KAAK6B,aAAanB,KAAKV,MACjCe,MAAOf,KAAKI,MAAMC,cArCLyB,aAkDvB,IAWeC,cAjBf,SAAyBzB,GACvB,MAAO,CACLA,QAASA,IAIc,SAAA0B,GACzB,MAAO,CACLxB,WAAY,SAAAyB,GACVD,ECzDG,CACLT,KAAM,aACNW,QDuDqBD,KAErBjB,UAAW,SAAAiB,GACVD,EE5DG,CACNT,KAAM,aACNW,QF0DuBD,OAKVF,CAGbpC,GGnEEwC,EAASC,EAAQ,IAEfC,mLAEHF,EAAOG,WAAW,CACjBC,QAAQ,EACRC,KAAK,IAGL,IAAIC,EAAIzC,KAAKJ,MAAMU,QAMnB,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,KAAGK,GAAG,UAAUJ,UAAU,eAAesB,wBARpC,CAAEC,OAAQR,EAAOM,cAVRX,aA8BPC,kBANf,SAAyBzB,GACvB,MAAO,CACLA,QAASA,IAIEyB,CAAyBM,UCnClCO,EAAe,CACnBrC,KAAM,0bCQFsC,EAAQC,YDLC,WAAkC,IAAjC1C,EAAiC2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBH,EAAcM,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,MAAoB,eAAhBC,EAAO3B,KAEF2B,EAAOhB,QACU,eAAhBgB,EAAO3B,KACT2B,EAAOhB,QAER9B,ICST,IAAM+C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUX,MAAOA,GACf5B,EAAAC,EAAAC,cAZJ,WACE,OACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAACuC,EAAD,QAQF,OAEFP","file":"static/js/main.df916d13.chunk.js","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport userInput from \"../actions/inputAction\";\nimport clearInput from \"../actions/clearAction\";\n\nclass TextArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      val: this.props.content.init\n    };\n    this.props.textChange(this.state.val);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      val: e.target.value\n    });\n    this.props.textChange(e.target.value);\n  }\n  handleClick(e) {\n  \tthis.setState({\n  \t\tval: ''\n  \t})\n  \tthis.props.clearText('');\n  }\n  render() {\n    return (\n      <div className=\"container textarea-container\">\n        <h1>Text Area</h1>\n        <hr />\n        <p className=\"textarea-content\">\n        \tType any <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\" target=\"_blank\" rel=\"noopener noreferrer\"> \n        \tGithub markdown\n        </a>\n        <input type=\"button\" value=\"clear\" id=\"clear\" className=\"clear-btn\" onClick={this.handleClick}/>\n        </p>\n        <textarea\n          id=\"editor\"\n          cols=\"60\"\n          rows=\"39\"\n          onChange={this.handleChange.bind(this)}\n          value={this.state.val}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(content) {\n  return {\n    content: content\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    textChange: data => {\n      dispatch(userInput(data));\n    },\n    clearText: data => {\n    \tdispatch(clearInput(data));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TextArea);\n","export default function userInput(text) {\n  // console.log(\"action payload is: \", text);\n  return {\n    type: \"USER_INPUT\",\n    payload: text\n  };\n}\n\nexport function clearArea(clear) {\n\tconsole.log(\"action is:\", clear);\n\treturn {\n\t\ttype: \"CLEAR_AREA\",\n\t\tpayload: clear\n\t}\n}","export default function clearInput(clear) {\n\t// console.log(\"action is:\", clear);\n\treturn {\n\t\ttype: \"CLEAR_AREA\",\n\t\tpayload: clear\n\t}\n}","import React from \"react\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nlet marked = require('marked');\n\nclass Preview extends Component {\n  render() {\n  \tmarked.setOptions({\n  \t\tbreaks: true,\n  \t\tgfm: true\n  \t});\n\n    let c = this.props.content;\n\n    function createMarkup() {\n      return { __html: marked(c) };\n    }\n\n    return (\n      <div className=\"container preview-container\">\n        <h1>Preview</h1>\n        <hr />\n        <p>see changes here</p>\n        <p id=\"preview\" className=\"preview-area\" dangerouslySetInnerHTML={createMarkup()} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(content) {\n  return {\n    content: content\n  };\n}\n\nexport default connect(mapStateToProps)(Preview);\n","const defaultState = {\n  init: \"# h1 heading \\n\\n## h2 heading \\n\\n`inline block of code`\\n\\n``` \\n\\n multi-line block of code ```\\n\\n[I'm an inline-style link](https://www.google.com)\\n\\n >> This is a block quote. The text wraps around the more you type.\\n\\n 1. first list item \\n\\n 2. second list item \\n\\n\\n\\n Here's an image: ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png 'Logo Title Text 1')\\n\\n\\n\\n**Some bolded text**\"\n};\n\nexport default (state = defaultState, action) => {\n  if (action.type === \"USER_INPUT\") {\n    // console.log('reducer action is: ', action);\n    return action.payload;\n  } else if(action.type === \"CLEAR_AREA\") {\n  \treturn action.payload;\n  }\n  return state;\n};\n","import \"./style/index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TextArea from \"./components/textarea\";\nimport Preview from \"./components/previewer\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers/inputReducer\";\n\nconst store = createStore(rootReducer);\n\nfunction App() {\n  return (\n    <div className=\"main-container\">\n      <TextArea />\n      <Preview />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}